import { sdk } from "@farcaster/frame-sdk";
// ... other imports

export async function endGame(walkAway: boolean, message: string) {
  // ... existing code

  if (message === "Congratulations, youâ€™ve won!" && prize === 1000000) {
    try {
      const accounts = await sdk.wallet.ethProvider.request({
        method: "eth_requestAccounts",
      });
      const tx = await sdk.wallet.ethProvider.request({
        method: "eth_sendTransaction",
        params: [{
          from: accounts[0],
          to: "0xYourNFTContractAddress",
          data: "0xYourMintFunctionData", // Replace with actual calldata
        }],
      });
      console.log("NFT minted, tx hash:", tx);
    } catch (error) {
      console.error("Failed to mint NFT:", error);
    }
  }

  // ... rest of the code
}


         <button id="show-prize-ladder-btn" class="px-6 py-3 bg-gradient-to-r from-gray-600 to-gray-700 text-white font-medium rounded-full shadow-lg hover:shadow-gray-600/40 hover:scale-105 transition-all duration-300 flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
          </svg>
          Prize Ladder
        </button>
      </div>
      
      <!-- Prize ladder modal (hidden by default) -->
      <div id="prize-modal" class="fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm hidden transition-opacity duration-300">
        <div class="bg-gradient-to-b from-gray-800 to-gray-900 p-6 rounded-xl border border-gray-700 w-11/12 max-w-md shadow-2xl">
          <div class="flex justify-between items-center mb-4">
            <h2 class="text-2xl font-bold text-yellow-400">Prize Ladder</h2>
            <button id="close-prize-ladder" class="text-gray-400 hover:text-white transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
          <div class="max-h-96 overflow-y-auto pr-2 custom-scrollbar">
            <ul class="space-y-2">
              ${PRIZE_LADDER.map((prize, index) => {
                const isSafe = SAFE_HAVENS.includes(index + 1);
                const isMillionaire = index === PRIZE_LADDER.length - 1;

                return `
                <li class="flex items-center justify-between py-2 px-3 rounded ${
                  isMillionaire
                    ? "bg-gradient-to-r from-yellow-500/30 to-yellow-700/30 border border-yellow-500/50"
                    : isSafe
                    ? "bg-gradient-to-r from-green-500/20 to-green-700/20 border border-green-500/40"
                    : "border-b border-gray-700"
                }">
                  <span class="font-medium text-sm ${
                    isMillionaire
                      ? "text-yellow-300"
                      : isSafe
                      ? "text-green-400"
                      : "text-gray-300"
                  }">Question ${index + 1}</span>
                  <span class="font-bold ${
                    isMillionaire
                      ? "text-yellow-300"
                      : isSafe
                      ? "text-green-400"
                      : "text-white"
                  }">$${prize.toLocaleString()}</span>
                </li>
                `;
              }).join("")}
            </ul>
          </div>
          <div class="mt-6 flex justify-center">
            <div class="text-center text-sm text-gray-400 mb-2">
              <span class="inline-block w-3 h-3 bg-green-500/40 border border-green-500 rounded-sm mr-1"></span> Safe Havens
            </div>
          </div>
        </div>
      </div>
    </div>
  `;